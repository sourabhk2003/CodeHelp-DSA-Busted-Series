#include <vector>
using namespace std;

int findFirstOccurrence(vector<int>& nums, int target) {
    int start = 0, end = nums.size() - 1;
    int first = -1;

    while (start <= end) {
        int mid = start + (end - start) / 2;

        if (nums[mid] == target) {
            first = mid; // Update first occurrence
            end = mid - 1; // Search in the left half
        } else if (nums[mid] < target) {
            start = mid + 1;
        } else {
            end = mid - 1;
        }
    }

    return first;
}

int findLastOccurrence(vector<int>& nums, int target) {
    int start = 0, end = nums.size() - 1;
    int last = -1;

    while (start <= end) {
        int mid = start + (end - start) / 2;

        if (nums[mid] == target) {
            last = mid; // Update last occurrence
            start = mid + 1; // Search in the right half
        } else if (nums[mid] < target) {
            start = mid + 1;
        } else {
            end = mid - 1;
        }
    }

    return last;
}

vector<int> searchRange(vector<int>& nums, int target) {
    vector<int> result(2, -1); // Initialize result as [-1, -1]
    result[0] = findFirstOccurrence(nums, target); // Find first occurrence
    result[1] = findLastOccurrence(nums, target); // Find last occurrence
    return result;
}
